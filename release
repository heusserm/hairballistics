#!/bin/bash

# Exit script if any command fails
set -e

release_message="$1"
archive_path="/tmp/hairballistics.tar.gz"
directory_to_release_from="public"
release_branch="gh-pages"
directory_to_release_to="game"

function require_release_message() {
    if [ -z "$1" ]; then
        echo "Please provide a release message." $red
        exit 1
    fi
}

function create_release_archive() {
    tar czf "$archive_path" -C "$directory_to_release_from" .
}

function clean_up_release_branch() {
    git clean -xdf
    rm -rf "$directory_to_release_to"
}

function branch_exists() {
    local branch_name="$1"
    git show-ref --verify --quiet "refs/heads/$branch_name"
}

function switch_to_branch() {
    local branch="$1"
    if branch_exists "$branch"; then
        git branch -D "$branch"
    fi
    git checkout "$branch"
}

function extract_archive_on_release_branch() {
    switch_to_branch "$release_branch"
    clean_up_release_branch
    mkdir "$directory_to_release_to"
    tar xzf "$archive_path" -C "$directory_to_release_to"
    rm "$archive_path"
}

function publish_release() {
    git add --all
    git commit -m "$release_message (automated release)"

    git pull origin "$release_branch"
    git push origin "$release_branch"

    git checkout master
}


require_release_message "$release_message"
create_release_archive
extract_archive_on_release_branch
publish_release

